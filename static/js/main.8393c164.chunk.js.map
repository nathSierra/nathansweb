{"version":3,"sources":["Components/HomePage/HomePage.js","Components/Contact/Contact.js","Components/About/About.js","Components/Work/Work.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","className","Contact","href","class","About","Work","App","props","BrowserRouter","Link","to","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8393c164.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst HomePage = () =>(\r\n  <div>\r\n\r\n    <div className=\"intro\">\r\n      <p>\r\n        Hello.\r\n      </p>\r\n\r\n    </div>\r\n  </div>\r\n\r\n)\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst Contact = () => (\r\n  <div>\r\n    <h2>Upon Interest</h2>\r\n    <p>Wanna talk? Shoot me an email at:</p>\r\n    <p className=\"cont\">\r\n      <a href=\"mailto:arreisnahtan@gmail.com\" class=\"email\">arreisnahtan@gmail.com</a>\r\n    </p>\r\n  </div>\r\n)\r\n\r\nexport default Contact;","import React from 'react'\r\n\r\nconst About = () => (\r\n  <div>\r\n    <h2>About</h2>\r\n    <p>My name is Nathan Sierra.</p>\r\n    <p>I currently live in Atlanta,</p>\r\n    <p>but I used to live in Illinois, Montana, and even the Czech Republic (for a bit!).</p>\r\n    <p>I've been studying computer science on my own for around a year, and I've recently graduated from Georgia Tech's 2019 Full Stack Flex Web Development program.</p>\r\n    <p>Before that I let my love of literature dictate my schooling, and graduated from Southern Illinois University Edwardsville with a BA in English Literature.</p>\r\n    <p>As a kid, I let my mind become absorbed by worlds crafted by excellent storytellers. To me, stories almost seemed like magic. The fact one could weave mere thoughts into conveying a grand epic like Lord of the Rings astounded me.</p>\r\n    <p>Today, that I'm similarly enthralled by computer science; the art and science of constructing an idea into a functional piece of software is, without being too over-the-top, astounding. </p>\r\n    <p>It's almost as though you're practicing magic.</p>\r\n    <p>I'm consistently amazed by the world around me, by the ingenuity and kindness of humanity and the beauty of nature. </p>\r\n    <p>I hope to continue to become a great web developer, and someday perhaps even a software developer.</p>\r\n  </div>\r\n)\r\n\r\nexport default About","import React from 'react';\r\n\r\nconst Work = () => (\r\n  <div>\r\n    <h2>Resume</h2>\r\n    <p>I graduated from Southern Illinois University Edwardsville in 2015.</p>\r\n    <p>While in university I worked for my school newspaper, the Alestle, as an editor.</p>\r\n    <p>I worked at a coffee shop called Sacred Grounds for a year,</p>\r\n    <p>after that I found myself working seasonal jobs for a while.</p>\r\n    <p>I also worked as an English teacher in Brno for a little bit.</p>\r\n    <p>Years 2018 and 2019 found me working in Decatur at Ford Fry restaurant No.246 until I started my web development class.</p>\r\n    <hr/> \r\n    <p>As an aside: Check out some of my work on Github! When I'm particularly fond of schoolwork I've done I'll post it here, too.</p>\r\n    <h3>Works I'm proud of:</h3>\r\n    <ul>\r\n      <li>\r\n        <h4>\r\n          <a href=\"https://pacific-river-83712.herokuapp.com/\">\r\n            <i className=\"far fa-sticky-note\"></i> Kudos\r\n          </a>\r\n        </h4>\r\n        <p>This is a (very small) full stack application where you can create notes for users. It uses MongoDB as the database hosted by MongoDB Atlas, while the server and front end is hosted by Heroku. </p>\r\n      </li>\r\n      <li>\r\n        <h4>\r\n          <a href=\"https://shielded-hollows-44293.herokuapp.com/\">\r\n            <i className=\"far fa-sticky-note\"></i> NightOwl\r\n          </a>\r\n        </h4>\r\n        <p> A webApp my group and I designed for those curious about night life in Atlanta, Georgia. We gathered info about restaurants and bars and incorporated them into this easy-to-use app. Check it out!\r\n        </p>\r\n      </li>  \r\n    </ul>\r\n  </div>\r\n)\r\n\r\nexport default Work;","import React from 'react';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport HomePage from './Components/HomePage/HomePage';\nimport Contact from './Components/Contact/Contact';\nimport About from './Components/About/About';\nimport Work from './Components/Work/Work';\n\nconst App = props => (\n  <Router>\n    <body className=\"container\">\n      <header>\n        <ul>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/work\">Work</Link>\n          </li>\n          <li>\n            <Link to=\"/contact\">Contact</Link>\n          </li>\n        </ul>\n      </header>\n      <main className=\"siteContent\">\n        <Route exact path='/' component={HomePage} />\n        <Route exact path='/contact' component={Contact} />\n        <Route exact path='/work' component={Work} />\n        <Route exact path='/about' component={About} />\n      </main>\n      <footer>\n      <ul>\n        <li><a href=\"https://github.com/nathSierra\"><i class=\"fab fa-github\"></i></a></li>\n        <li><a href=\"https://www.linkedin.com/in/nathan-sierra-64752416b/\"><i class=\"fab fa-linkedin-in\"></i></a></li>\n      </ul>\n      </footer>\n    </body>\n  </Router>\n    \n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}